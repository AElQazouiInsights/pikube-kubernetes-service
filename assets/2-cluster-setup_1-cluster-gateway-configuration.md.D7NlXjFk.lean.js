import{_ as n,c as t,j as i,a as e,t as l,a0 as p,o as h}from"./chunks/framework.BOVrHxUX.js";const k="/pikube-kubernetes-service/assets/gateway-1.B3URh4V_.jpg",F=JSON.parse('{"title":"Cluster Gateway Configuration","description":"How to configure a Single-board computer (Raspberry Pi or Orange Pi) as router/firewall of our Kubernetes Cluster providing connectivity and basic services (DNS, DHCP, NTP).","frontmatter":{"title":"Cluster Gateway Configuration","permalink":"/2-cluster-setup/1-cluster-gateway-configuration","description":"How to configure a Single-board computer (Raspberry Pi or Orange Pi) as router/firewall of our Kubernetes Cluster providing connectivity and basic services (DNS, DHCP, NTP).","last_modified_at":"18-06-2023"},"headers":[],"relativePath":"2-cluster-setup/1-cluster-gateway-configuration.md","filePath":"2-cluster-setup/1-cluster-gateway-configuration.md"}'),r={name:"2-cluster-setup/1-cluster-gateway-configuration.md"},o={id:"frontmatter-title",tabindex:"-1"};function d(a,s,c,g,y,E){return h(),t("div",null,[i("h1",o,[e(l(a.$frontmatter.title)+" ",1),s[0]||(s[0]=i("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1))]),s[1]||(s[1]=p('<p align="center"><img alt="cluster-gateway" src="'+k+`" width="30%" height="%"></p><p><strong><code>gateway</code></strong>, a Raspberry Pi 4B, 4GB, is used as <strong><code>Router</code></strong> and <strong><code>Firewall</code></strong> for the home lab, isolating the <strong><code>pi-cluster</code></strong> from the home network. It will also provide <code>DNS</code>, <code>NTP</code> and <code>DHCP</code> services to the lab network. In case of deployment using centralized SAN storage architectural option, gateway is providing <code>SAN</code> services also.</p><p>This <strong><code>gateway</code></strong>, is connected to the home network using its WIFI interface (wlan0) and to the LAN Switch using the eth interface (eth0).</p><p>In order to ease the automation with Ansible, OS installed on gateway is the same as the one installed in the nodes of the cluster (node1-node7): <strong>Ubuntu 22.04 64 bits</strong>.</p><h2 id="storage-configuration" tabindex="-1">Storage configuration <a class="header-anchor" href="#storage-configuration" aria-label="Permalink to &quot;Storage configuration&quot;">​</a></h2><p><strong><code>gateway</code></strong> node is based on a Raspberry Pi 4B, 4GB booting from a MicroSD, a dedicated disks storage architecture based on a <strong><code>SanDisk Industrial EDGE MicroSD 32GB CLASS 10 A1</code></strong>, optimized for stable and reliable operations.</p><h2 id="network-configuration" tabindex="-1">Network configuration <a class="header-anchor" href="#network-configuration" aria-label="Permalink to &quot;Network configuration&quot;">​</a></h2><p>The <strong><code>WIFI interface</code></strong> (wlan0) will be used to be connected to the <strong><code>home network</code></strong> using static IP address <strong><code>192.168.1.10/24</code></strong>, while <strong><code>ethernet interface</code></strong> (eth0) will be connected to the lan switch, lab network, using static IP address <strong><code>10.0.0.1/24</code></strong>. Static IP address in the home network, will enable the configuration of static routes on the Windows laptop and Virtual Machine or Windows Subsystem for Linux running on it (pimaster) to access the cluster nodes without physically connect the laptop to the lan switch with an ethernet cable.</p><h2 id="os-installation-and-initial-configuration" tabindex="-1">OS installation and initial configuration <a class="header-anchor" href="#os-installation-and-initial-configuration" aria-label="Permalink to &quot;OS installation and initial configuration&quot;">​</a></h2><p><strong><code>Ubuntu Server 22.04.x LTS</code></strong> can be installed on <strong><code>Raspberry PI</code></strong> using a <a href="https://ubuntu.com/download/raspberry-pi" target="_blank" rel="noreferrer"><strong><code>preconfigured cloud image</code></strong></a> that need to be copied to SDCard</p><p><strong><code>Raspberry Pi</code></strong> will be configured to boot Ubuntu OS from a MicroSD. The initial Ubuntu 22.04.x LTS configuration on the Single-board computers will be automated using <a href="https://github.com/Crypto-Aggressor/PiKube-Kubernetes-Cluster/blob/production/documentation/0-definitions.md#cloud-init" target="_blank" rel="noreferrer"><strong><code>cloud-init</code></strong></a> configuration files, i.e. <a href="https://github.com/Crypto-Aggressor/PiKube-Kubernetes-Cluster/blob/production/documentation/0-definitions.md#user-data" target="_blank" rel="noreferrer"><strong><code>user-data</code></strong></a> and <a href="https://github.com/Crypto-Aggressor/PiKube-Kubernetes-Cluster/blob/production/documentation/0-definitions.md#network-config" target="_blank" rel="noreferrer"><strong><code>network-config</code></strong></a> for <strong><code>gateway</code></strong>.</p><p>Ubuntu cloud-init configuration files within the image, <strong><code>/boot/user-data</code></strong> and <strong><code>/boot/network-config)</code></strong>, will be modified before the first startup using <strong><code>user-data</code></strong> and <strong><code>network-config</code></strong> templates</p><ul><li><p>Burn the Ubuntu OS image to a SD-card using *<a href="https://www.raspberrypi.com/software/" target="_blank" rel="noreferrer"><strong><code>Raspberry PI Imager</code></strong></a> or <a href="https://etcher.balena.io/" target="_blank" rel="noreferrer"><strong><code>Balena Etcher</code></strong></a></p></li><li><p>Mofify <strong><code>user-data</code></strong> and <strong><code>network-config</code></strong> within <strong><code>/boot</code></strong> directory in the SDCard</p></li></ul><div class="centered-table"><table tabindex="0"><thead><tr><th style="text-align:center;">Dedicated Disks</th></tr></thead><tbody><tr><td style="text-align:center;"><a href="https://github.com/Crypto-Aggressor/PiKube-Kubernetes-Cluster/blob/production/build/metal/raspberry-pi/cloud-init/gateway/user-data" target="_blank" rel="noreferrer">user-data for gateway</a></td></tr><tr><td style="text-align:center;"><a href="https://github.com/Crypto-Aggressor/PiKube-Kubernetes-Cluster/blob/production/build/metal/raspberry-pi/cloud-init/gateway/network-config" target="_blank" rel="noreferrer">network-config for gateway</a></td></tr></tbody></table></div><p><strong>Example cloud-init YAML file for gateway Configuration</strong>:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#cloud-config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set TimeZone and Locale for UK</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">timezone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Europe/London</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">locale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">en_GB.UTF-8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Hostname</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hostname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">gateway</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># cloud-init not managing hosts file. only hostname is added</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">manage_etc_hosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">localhost</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">users</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # not using default ubuntu user</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pi</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    primary_group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">users</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    groups</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">adm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">admin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    shell</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    sudo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ALL=(ALL) NOPASSWD:ALL</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    lock_passwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    ssh_authorized_keys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Reboot to enable Wifi configuration (more details in network-config file)</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">power_state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">reboot</span></span></code></pre></div><h3 id="generating-ssh-keys" tabindex="-1">Generating SSH Keys <a class="header-anchor" href="#generating-ssh-keys" aria-label="Permalink to &quot;Generating SSH Keys&quot;">​</a></h3><p>Secure Shell (SSH) keys are a pair of cryptographic keys that can be used to authenticate to an SSH server as an alternative to password-based logins. A private key, which is secret, and a public key, which is shared, are used in the authentication process. Here is a procedure to generate an SSH key pair, referred to as my_key in the cloud-config examples:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/my-key</span></span></code></pre></div><p>This command creates a private key <strong><code>my-key</code></strong> and a public key <strong><code>my-key.pub</code></strong> in the <strong><code>~/.ssh/</code></strong> directory.</p><ul><li>From Windows laptop copy private key <strong><code>my-key</code></strong> to the <strong><code>gateway</code></strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/gateway-pi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/gateway-pi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pi@192.168.8.10:~/.ssh/gateway-pi</span></span></code></pre></div><ul><li>Modify file <strong><code>/boot/network-config</code></strong> following the <a href="https://github.com/Crypto-Aggressor/PiKube-Kubernetes-Cluster/blob/production/build/metal/raspberry-pi/clout-init/gateway/network-config" target="_blank" rel="noreferrer"><strong><code>network-config template</code></strong></a></li></ul><p>The following YAML configuration snippet describes network configuration settings using Netplan, a YAML-based network configuration utility in Linux. This configuration is for both wired (eth0) and wireless (wlan0) network interfaces. It allows for manual configuration of IP addresses, gateway, DNS, and wireless network connection settings, providing flexibility and control over network configurations in Linux environments</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Cloud-init netplan configuration</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Specifies that the configuration uses version 2 of the YAML format</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Wired Ethernet Configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ethernets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Specifies network configurations for Ethernet interfaces</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  eth0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Specifies network configurations for Ethernet interfaces</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    dhcp4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Disables DHCPv4 for the eth0 interface, indicating manual IP configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10.0.0.1/24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Assigns the IP address 10.0.0.1 with a subnet mask of 255.255.255.0 (equivalent to /24) to the eth0 interface</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Wireless Configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">wifis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Specifies network configurations for wireless interfaces</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  wlan0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Represents the wireless interface named &quot;wlan0&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    dhcp4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Disables DHCPv4 for the wlan0 interface, indicating manual IP configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    optional</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Marks the wlan0 interface as optional, meaning it won&#39;t prevent booting if it&#39;s unavailable</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    access-points</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Specifies the list of available Wi-Fi access points</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;&lt;SSID_NAME&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Replace with the SSID (Wi-Fi network name) of the network you want to connect to</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        password</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;SSID_PASSWD&gt;&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Replace with the password for the specified SSID</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">192.168.8.10/24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Assigns the IP address 192.168.8.10 with a subnet mask of 255.255.255.0 (equivalent to /24) to the wlan0 interface</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    gateway4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">192.168.8.1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Specifies the IPv4 gateway address</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nameservers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Specifies DNS server addresses for name resolution</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80.58.61.250</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80.58.61.254</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Specifies the DNS server addresses 80.58.61.250 and 80.58.61.254</span></span></code></pre></div><ul><li>Once the <strong><code>gateway</code></strong> is booted initiate from the Windows laptop an ssh connection using the private key</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/private-ssh-key</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -q</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pi@192.168.8.10</span></span></code></pre></div><h3 id="configuration-steps" tabindex="-1">Configuration Steps <a class="header-anchor" href="#configuration-steps" aria-label="Permalink to &quot;Configuration Steps&quot;">​</a></h3><ul><li>Update <strong><code>gateway</code></strong> OS</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> full-upgrade</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><ul><li>Reboot the <strong><code>gateway</code></strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shutdown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> now</span></span></code></pre></div><ul><li>Free the <strong><code>gateway</code></strong> resources from unused packages</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> snap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">snap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lxd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">snap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> core18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">snap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> snapd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> purge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> snapd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> autoremove</span></span></code></pre></div><ul><li>Install useful utility scripts</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libraspberrypi-bin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> net-tools</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arp-scan</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inetutils-traceroute</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libraspberrypi-bin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> net-tools</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> arp-scan</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inetutils-traceroute</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nftables</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> linux-modules-extra-raspi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnsmasq</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iptables-persistent</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> netfilter-persistent</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> haproxy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fake-hwclock</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bridge-utils</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chrony</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apache2-utils</span></span></code></pre></div><ul><li>Change default GPU Memory Split by adding to <strong><code>/boot/firmware/config.txt</code></strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set GPU Memory Allocation</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Adjust the amount of memory allocated to the GPU.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For headless mode and non-graphical applications, a lower value is often sufficient.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Value is in megabytes (MB). Default is 64.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Recommended: 16 for headless scenarios, adjust as needed.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gpu_mem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">16</span></span></code></pre></div><blockquote><p>📌 <strong>Note</strong></p><p><em>Since Raspberry Pi gateway in the cluster is configured as headless server without monitors and is using the server version of Ubuntu distribution (without the desktop GUI), the reserved GPU memory for Raspberry Pi can be set to the lowest possible value (16MB).</em></p></blockquote><ul><li>Reboot the <strong><code>gateway</code></strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shutdown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> now</span></span></code></pre></div><ul><li>Enabling VXLAN module (Ubuntu 22.04) for Raspbery Pi only</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> linux-modules-extra-raspi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shutdown</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> now</span></span></code></pre></div><h2 id="router-firewall-configuration" tabindex="-1">Router/Firewall Configuration <a class="header-anchor" href="#router-firewall-configuration" aria-label="Permalink to &quot;Router/Firewall Configuration&quot;">​</a></h2><p>To transform <strong><code>gateway</code></strong> into a router, it&#39;s essential to configure Ubuntu to permit IP packet forwarding. This can be achieved by integrating <strong><code>net.ipv4.ip_forward=1</code></strong> into the <strong><code>/etc/sysctl.conf</code></strong> file.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;net.ipv4.ip_forward=1&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tee</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/sysctl.conf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sysctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span></span></code></pre></div><blockquote><p>📌 <strong>Note</strong></p><p><em>To set up Filtering and Forwarding Rules, the use of <strong><code>iptables</code></strong> package can be used, executing the following commands</em></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iptables</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> POSTROUTING</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wlan0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MASQUERADE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FORWARD</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wlan0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> state</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --state</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RELATED,ESTABLISHED</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FORWARD</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wlan0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ACCEPT</span></span></code></pre></div><p><em>However, for more advanced router or firewall configurations, consider employing the nftables package.</em></p></blockquote><p><strong><code>nftables</code></strong> is recognized as the contemporary alternative to <strong><code>iptables</code></strong>. It brings forward superior flexibility, user-friendliness, scalability, and efficient packet classification. Both utilities are grounded on the netfilter kernel module. The community maintainers highlight that <strong><code>nftables</code></strong> is where innovative features within netfilter are introduced.</p><p>From Debian&#39;s 11th release (Buster) onwards, <strong><code>nftables</code></strong> has been endorsed as the default firewall package, thereby replacing <strong><code>iptables</code></strong> (<a href="https://wiki.debian.org/nftables" target="_blank" rel="noreferrer">Debian&#39;s nftables documentation</a>). With this release, nf_tables serves as the default backend for <strong><code>iptables</code></strong>, made possible through the iptables-nft layer. This allows the utilization of <strong><code>iptables</code></strong> syntax in tandem with the nf_tables kernel subsystem. Similarly, starting from Ubuntu 20.10, the ip-tables package now encompasses xtables-nft commands, which are akin to <strong><code>iptables</code></strong> commands but leverage the <strong><code>nftables</code></strong> kernel API, thus streamlining the transition from <strong><code>iptables</code></strong> to <strong><code>nftables</code></strong>.</p><p>Given the robust support it has from the Linux community, it&#39;s anticipated that <strong><code>iptables</code></strong> may be phased out in the near future, placing <strong><code>nftables</code></strong> in the forefront, therefore will be used for this project.</p><ul><li>As a prerequisites, let&#39;s ensure <strong><code>nftables</code></strong> is installed. If not, install it using the distribution&#39;s package manager.</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nftables</span></span></code></pre></div><h3 id="initial-setup" tabindex="-1">Initial Setup <a class="header-anchor" href="#initial-setup" aria-label="Permalink to &quot;Initial Setup&quot;">​</a></h3><ul><li>Begin by flushing any existing rules to start with a clean slate</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nft</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flush</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruleset</span></span></code></pre></div><p><a id="base-configuration"></a></p><h3 id="base-configuration" tabindex="-1">Base Configuration <a class="header-anchor" href="#base-configuration" aria-label="Permalink to &quot;Base Configuration&quot;">​</a></h3><ul><li>Create a new configuration file at <strong><code>/etc/nftables.conf</code></strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nftables.conf</span></span></code></pre></div><ul><li>Paste the main configuration contents into this file. This file serves as the primary entry point and will include other files containing rule definitions.</li></ul><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/usr/sbin/nft -f</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ansible managed</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Clear current ruleset to apply new rules.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flush ruleset</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Include definitions of common terms and sets to be used in the rules.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">include </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/etc/nftables.d/defines.nft&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Filter table for controlling traffic.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table inet filter {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Global chain for state management.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    chain global {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Allow established and related connections.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ct state established,related accept</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # Drop invalid connections.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ct state invalid drop</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Include predefined sets.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    include </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/etc/nftables.d/sets.nft&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Include rules for incoming traffic.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    include </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/etc/nftables.d/filter-input.nft&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Include rules for outgoing traffic.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    include </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/etc/nftables.d/filter-output.nft&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Include rules for forwarding traffic.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    include </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/etc/nftables.d/filter-forward.nft&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Table for Network Address Translation (NAT).</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">table ip nat {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Include predefined sets.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    include </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/etc/nftables.d/sets.nft&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Include rules for prerouting (destination NAT).</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    include </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/etc/nftables.d/nat-prerouting.nft&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Include rules for postrouting (source NAT).</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    include </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/etc/nftables.d/nat-postrouting.nft&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="define-common-terms-and-sets" tabindex="-1">Define Common Terms and Sets <a class="header-anchor" href="#define-common-terms-and-sets" aria-label="Permalink to &quot;Define Common Terms and Sets&quot;">​</a></h3><ul><li>Create a directory to hold additional nftables rule files:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nftables.d/</span></span></code></pre></div><ul><li>In <strong><code>/etc/nftables.d/</code></strong>, create a file named <strong><code>defines.nft</code></strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nftables.d/defines.nft</span></span></code></pre></div><ul><li>Copy the definitions for common terms and sets (e.g., port numbers, interface names, etc.) into this file.</li></ul><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># broadcast and multicast</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">badcast_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = { 255.255.255.255, 224.0.0.1, 224.0.0.251 } </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Broadcast and Multicast addresses (IPv4)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ip6_badcast_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = { ff02::16 } </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Multicast address (IPv6)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># in_tcp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in_tcp_accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ssh,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># SSH protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    https,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTTPS protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    http,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTTP protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    9100,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Node exporter (Prometheus)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    8200, 8201,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Vault ports</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    6443,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Kubernetes API server</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iscsi-target   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># iSCSI target port</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># in_udp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in_udp_accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    snmp,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># SNMP protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    domain,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DNS protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ntp,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># NTP protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bootps,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># BOOTP/DHCP server</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    69             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># TFTP protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># out_tcp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">out_tcp_accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    http,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTTP protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    https,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTTPS protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ssh            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># SSH protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># out_udp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">out_udp_accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    domain,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DNS protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bootps,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># BOOTP/DHCP server</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ntp            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># NTP protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># lan_interface</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">lan_interface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = eth0      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Internal LAN interface</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># wan_interface</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">wan_interface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = wlan0     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># External WAN interface</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># lan_network</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">lan_network</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 10.0.0.0/24 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># LAN IP range</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># forward_tcp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">forward_tcp_accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    http,          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTTP protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    https,         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTTPS protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ssh,           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># SSH protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    9091           </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># MinIO browser</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># forward_udp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">forward_udp_accept</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    domain,        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DNS protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ntp            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># NTP protocol</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Vault listening ports</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vault_ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = { 8200, 8201 }</span></span></code></pre></div><h3 id="rule-files-for-specific-traffic-types" tabindex="-1">Rule Files for Specific Traffic Types <a class="header-anchor" href="#rule-files-for-specific-traffic-types" aria-label="Permalink to &quot;Rule Files for Specific Traffic Types&quot;">​</a></h3><p>For clarity and modularity, the rules will be separated based on the type of traffic:</p><h4 id="input-traffic" tabindex="-1">Input Traffic <a class="header-anchor" href="#input-traffic" aria-label="Permalink to &quot;Input Traffic&quot;">​</a></h4><ul><li>Create a file named <strong><code>filter-input.nft</code></strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nftables.d/filter-input.nft</span></span></code></pre></div><ul><li>Paste the rules pertaining to incoming traffic.</li></ul><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chain input {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Policy: By default, drop all incoming traffic </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type filter hook input priority 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; policy drop;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # General global rules (e.g. established/related traffic)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    jump global</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # No specific unwanted traffic to drop, thus placeholder for future rules if necessary</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # (none)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # No specific unwanted IPv6 traffic to drop, thus placeholder for future rules if necessary</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # (none)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Accept all traffic coming to/from the localhost interface</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # This ensures processes and services running on the same machine can communicate with each other</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iif lo accept</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Allow all ICMP traffic (IPv4 and IPv6)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # ICMP is used for ping requests, error messages and other network diagnostic purposes</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    meta l4proto { icmp, icmpv6 } accept</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Allow incoming UDP traffic based on a predefined set of ports</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # The specific ports are defined in the &#39;in_udp_accept&#39; set (e.g. domain, ntp)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    udp dport @in_udp_accept ct state new accept</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Allow incoming TCP traffic based on a predefined set of ports</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # The specific ports are defined in the &#39;in_tcp_accept&#39; set (e.g. http, https, ssh)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tcp dport @in_tcp_accept ct state new accept</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Log dropped traffic</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    log prefix </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[INPUT DROP]:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> limit rate 2/minute</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    drop</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="forwarded-traffic" tabindex="-1">Forwarded Traffic <a class="header-anchor" href="#forwarded-traffic" aria-label="Permalink to &quot;Forwarded Traffic&quot;">​</a></h4><ul><li>Create a file named <strong><code>filter-forward.nft</code></strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nftables.d/filter-forward.nft</span></span></code></pre></div><ul><li>Paste the rules regarding forwarded traffic.</li></ul><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chain prerouting {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Policy: Drop any forwarded traffic by default</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type filter hook forward priority 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; policy drop;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # General global rules (e.g. established/related traffic)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    jump global</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Allow specific LAN to WAN TCP traffic</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # This rule checks if the source is from our LAN and destination is WAN</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # and allows specific TCP ports defined in forward_tcp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iifname $lan_interface ip saddr $lan_network oifname $wan_interface tcp dport @forward_tcp_accept ct state new accept</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Allow specific LAN to WAN UDP traffic</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Similar to the above, but for UDP ports defined in forward_udp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iifname $lan_interface ip saddr $lan_network oifname $wan_interface udp dport @forward_udp_accept ct state new accept</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Allow incoming SSH traffic from WAN to our LAN</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # This rule checks for incoming SSH traffic from the WAN and forwards it to our LAN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iifname $wan_interface oifname $lan_interface ip daddr $lan_network tcp dport ssh ct state new accept</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Allow incoming HTTP and HTTPS traffic from WAN to our LAN</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iifname $wan_interface oifname $lan_interface ip daddr $lan_network tcp dport { http, https } ct state new accept</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Allow s3 (MinIO) traffic from WAN to a specific IP in our LAN</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # This rule allows traffic to ports 9091 and 9092 (typically used by MinIO) on IP 10.0.0.10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iifname $wan_interface oifname $lan_interface ip daddr 10.0.0.10 tcp dport { 9091, 9092 } ct state new accept</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Allow port-forwarding traffic (e.g. for Kubernetes services) from WAN to IP 10.0.0.10 on port 8080</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iifname $wan_interface oifname $lan_interface ip daddr 10.0.0.10 tcp dport 8080 ct state new accept</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Allow Vault traffic from WAN to a specific IP in our LAN on Vault&#39;s ports</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # This rule forwards traffic to Vault&#39;s ports (8200 and 8201) on IP 10.0.0.10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iifname $wan_interface oifname $lan_interface ip daddr 10.0.0.10 tcp dport $vault_ports ct state new accept</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Note for users: Instructions on how to use kubectl for port-forwarding</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # kubectl port-forward svc/[service-name] -n [namespace] [external-port]:[internal-port] --address 0.0.0.0</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Log dropped forwarded traffic</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    log prefix </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[FORWARD DROP]:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> limit rate 2/minute</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    drop</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="output-traffic" tabindex="-1">Output Traffic <a class="header-anchor" href="#output-traffic" aria-label="Permalink to &quot;Output Traffic&quot;">​</a></h4><ul><li>Create a file named <strong><code>filter-output.nft</code></strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nftables.d/filter-output.nft</span></span></code></pre></div><ul><li>Paste the rules concerning outgoing traffic.</li></ul><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chain output {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Policy: By default, allow all outgoing traffic</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # The purpose of this is to ensure the machine can freely initiate connections to external resources</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # without any hindrance.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type filter hook output priority 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; policy accept;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # At this time, there are no specific output filters.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # This section serves as a placeholder for any future specific output rules that may be required.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # For instance, if in the future there&#39;s a need to block specific outgoing traffic or</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # limit the machine&#39;s connections to certain external resources, those rules would be added here.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Log NAT prerouting decisions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    log prefix </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[NAT PREROUTING]:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> limit rate 5/minute</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="nat-network-address-translation" tabindex="-1">NAT (Network Address Translation) <a class="header-anchor" href="#nat-network-address-translation" aria-label="Permalink to &quot;NAT (Network Address Translation)&quot;">​</a></h4><ul><li>Create two files, <strong><code>nat-prerouting.nft</code></strong> and <strong><code>nat-postrouting.nft</code></strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nftables.d/nat-prerouting.nft</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nftables.d/nat-postrouting.nft</span></span></code></pre></div><ul><li>Paste the respective NAT rules into these files.</li></ul><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chain prerouting {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Policy: Process Network Address Translation (NAT) before routing decisions have been made.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # This is typically used to translate the destination addresses of packets that are entering the network.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # This is commonly used in port forwarding scenarios where you want to direct traffic</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # coming into a public IP to a private IP inside the network.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type nat hook prerouting priority 0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Log NAT prerouting decisions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    log prefix </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[NAT PREROUTING]:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> limit rate 5/minute</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chain postrouting {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Policy: Process Network Address Translation (NAT) after routing decisions have been made.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # This is typically used to translate the source addresses of packets that are leaving the network.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type nat hook postrouting priority 100</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Masquerade: This is a form of Source NAT (SNAT).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # When a packet leaves the network, its source address is replaced by the address of the machine</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # doing the masquerading (in this case, the gateway).</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # The masquerade target is used for dynamically-assigned IPs where the IP address can change at any time.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # It will use the current IP address of the outgoing interface.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # This ensures that replies can return to the machine that sent them, even if the network&#39;s public IP changes.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ip saddr $lan_network oifname $wan_interface masquerade</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Log NAT postrouting decisions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    log prefix </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[NAT POSTROUTING]:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> limit rate 5/minute</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="sets" tabindex="-1">Sets <a class="header-anchor" href="#sets" aria-label="Permalink to &quot;Sets&quot;">​</a></h4><ul><li>Create a file named <strong><code>sets.nft</code></strong>:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nftables.d/sets.nft</span></span></code></pre></div><ul><li>Paste the definitions for the various sets of IPs, ports, etc., that will be referenced in the rules.</li></ul><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define a set to match addresses that should be treated as blackholes (i.e., to be dropped).</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set blackhole {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type ipv4_addr</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Use the predefined list of badcast addresses.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = $badcast_addr</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define a set for TCP services that should be allowed for forwarded traffic.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set forward_tcp_accept {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type inet_service</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; flags interval;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Combine the predefined forward TCP accept services with Vault ports.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = $forward_tcp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define a set for UDP services that should be allowed for forwarded traffic.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set forward_udp_accept {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type inet_service</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; flags interval;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = $forward_udp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define a set for TCP services that should be allowed for incoming traffic.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set in_tcp_accept {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type inet_service</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; flags interval;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Combine the predefined incoming TCP accept services with Vault ports.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = $in_tcp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define a set for UDP services that should be allowed for incoming traffic.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set in_udp_accept {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type inet_service</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; flags interval;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = $in_udp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define a set to match IPv6 addresses that should be treated as blackholes.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set ip6_blackhole {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type ipv6_addr</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = $ip6_badcast_addr</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define a set for TCP services that should be allowed for outgoing traffic.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set out_tcp_accept {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type inet_service</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; flags interval;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = $out_tcp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define a set for UDP services that should be allowed for outgoing traffic.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">set out_udp_accept {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type inet_service</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">; flags interval;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    elements</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = $out_udp_accept</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="apply-configuration" tabindex="-1">Apply Configuration <a class="header-anchor" href="#apply-configuration" aria-label="Permalink to &quot;Apply Configuration&quot;">​</a></h3><ul><li>Load the ruleset</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nft</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/nftables.conf</span></span></code></pre></div><h3 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-label="Permalink to &quot;Testing&quot;">​</a></h3><p>Once rules applied, test the configuration. Ensure that:</p><ul><li>Services are still accessible.</li><li>Unwanted traffic is blocked.</li><li>Logging works as expected (check <code>/var/log/syslog</code> or the appropriate log file on the system).</li></ul><h3 id="persistence" tabindex="-1">Persistence <a class="header-anchor" href="#persistence" aria-label="Permalink to &quot;Persistence&quot;">​</a></h3><p>To ensure nftables rules are applied on boot, enable the nftables service:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nftables</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nftables</span></span></code></pre></div><h3 id="configuring-static-routes-to-access-the-cluster-from-the-home-network" tabindex="-1">Configuring static routes to access the cluster from the home network <a class="header-anchor" href="#configuring-static-routes-to-access-the-cluster-from-the-home-network" aria-label="Permalink to &quot;Configuring static routes to access the cluster from the home network&quot;">​</a></h3><p>To access the cluster nodes from the home network, a static route needs to be added to use <code>gateway</code> as the router for the lab network (10.0.0.0/24).</p><p>This route needs to be added to the Laptop and the VM running the <code>pimaster</code> node.</p><ul><li>Adding a static route in Windows laptop using powershell or cmd:</li></ul><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ROUTE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">P ADD </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MASK </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255.255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> METRIC </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span></code></pre></div><p>Adding a static route in Linux VM running on the laptop (VirtualBox):</p><p>Modify <code>/etc/netplan/50-cloud-init.yaml</code> to add the static route:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">network</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ethernets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    enp0s3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      dhcp4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">no</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      addresses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">192.168.56.20/24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Host Only VirtualBox network</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    enp0s8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      dhcp4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">yes</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Home network IP address</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      routes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10.0.0.0/24</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Cluster Lab Network</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        via</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">192.168.1.11</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # \`gateway\` static IP address in the home network</span></span></code></pre></div><p>Note: This is the pimaster VirtualBOX network configuration:</p><p>Eth0 (enp0s3) is connected to the VBox Host-Only adapter (laptop only connection). Eth1 (enp0s8) is connected to the VBox Bridge adapter (home network connection).</p><h2 id="dhcp-dns-configuration" tabindex="-1">DHCP/DNS Configuration <a class="header-anchor" href="#dhcp-dns-configuration" aria-label="Permalink to &quot;DHCP/DNS Configuration&quot;">​</a></h2><p><strong><code>dnsmasq</code></strong> is utilized as a lightweight DHCP/DNS server. For automating configuration tasks, the ansible role <a href="https://galaxy.ansible.com/quantfinance/dnsmasq" target="_blank" rel="noreferrer"><strong><code>quantfinancehub.dnsmasq</code></strong></a> has been developed.</p><h3 id="installation-and-configuration-of-dnsmasq" tabindex="-1">Installation and configuration of dnsmasq <a class="header-anchor" href="#installation-and-configuration-of-dnsmasq" aria-label="Permalink to &quot;Installation and configuration of dnsmasq&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnsmasq</span></span></code></pre></div><ul><li>Edit the file /etc/dnsmasq.d/dnsmasq.conf:</li></ul><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Inventory</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This section provides an inventory of devices with their MAC IDs.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Raspberry Pi 4B with 4GB RAM  - 2nd case - MAC ID d8:3a:dd:02:a3:d7 - gateway</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Asus ROG Flow Z13             - WSL      - MAC ID 00:15:5d:85:35:cb - ansible</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Raspberry Pi 4B with 4GB RAM  - 3rd case - MAC ID e4:5f:01:f5:c1:ae - blueberry-master</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Raspberry Pi 4B with 8GB RAM  - 4th case - MAC ID e4:5f:01:df:31:a2 - strawberry-master</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Raspberry Pi 4B with 8GB RAM  - 5th case - MAC ID dc:a6:32:73:69:c9 - blackberry-master</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Raspberry Pi 5 with 8GB RAM   - 6th case - MAC ID d8:3a:dd:b6:12:77 - cranberry-worker</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Raspberry Pi 3B+ with 1GB RAM - 1st case - MAC ID b8:27:eb:d2:40:87 - raspberry-worker</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Orange Pi 5 with 16GB RAM     - 1st case - eth0 MAC ID d2:22:4c:9e:b4:6c, wlan0 MAC ID e4:5f:01:2f:54:82 - orange-worker</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Orange Pi 5 with 16GB RAM     - 2nd case - MAC ID 4a:7f:14:dd:f0:35 - mandarine-worker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Interface Configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">interface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=eth0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">except-interface</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=lo</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">listen-address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=10.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bind-interfaces</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DNS Configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=80.58.61.250</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=80.58.61.254</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">domain-needed</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bogus-priv</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/picluster.homelab.com/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=picluster.homelab.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># DHCP Configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dhcp-range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=10.0.0.32,10.0.0.128,12h</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Pre-allocated DHCP configurations for devices.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dhcp-host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=d8:3a:dd:02:a3:d7,10.0.0.1   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># gateway</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dhcp-host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=00:15:5d:85:35:cb,10.0.0.2   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ansible</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dhcp-host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=e4:5f:01:f5:c1:ae,10.0.0.10  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># blueberry-master</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dhcp-host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=e4:5f:01:df:31:a2,10.0.0.11  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># strawberry-master</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dhcp-host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=dc:a6:32:73:69:c9,10.0.0.12  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># blackberry-master</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dhcp-host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=d8:3a:dd:b6:12:77,10.0.0.13  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># cranberry-worker</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dhcp-host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=b8:27:eb:d2:40:87,10.0.0.14  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># raspberry-worker</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dhcp-host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=d2:22:4c:9e:b4:6c,10.0.0.15  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># orange-worker</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dhcp-host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=4a:7f:14:dd:f0:35,10.0.0.16  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># mandarine-worker</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Hostname to IP mappings for devices and services.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">host-record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=gateway.picluster.homelab.com,10.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">host-record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=ansible.picluster.homelab.com,10.0.0.2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">host-record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=blueberry-master.picluster.homelab.com,10.0.0.10</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">host-record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=strawberry-master.picluster.homelab.com,10.0.0.11</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">host-record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=blackberry-master.picluster.homelab.com,10.0.0.12</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">host-record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=cranberry-worker.picluster.homelab.com,10.0.0.13</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">host-record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=raspberry-worker.picluster.homelab.com,10.0.0.14</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">host-record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=orange-worker.picluster.homelab.com,10.0.0.15</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">host-record</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=mandarine-worker.picluster.homelab.com,10.0.0.16</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Logging Configuration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">log-queries</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">log-dhcp</span></span></code></pre></div><ul><li>Restarting the dnsmasq service:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnsmasq</span></span></code></pre></div><h3 id="configuring-ansible-role" tabindex="-1">Configuring Ansible Role <a class="header-anchor" href="#configuring-ansible-role" aria-label="Permalink to &quot;Configuring Ansible Role&quot;">​</a></h3><p>DHCP static IP leases and DNS records are automatically taken from the ansible inventory file for <strong><code>hosts with ip</code></strong>, <strong><code>hostname</code></strong>, and <strong><code>mac</code></strong> variables defined. Refer to the <strong><code>ansible/inventory.yml</code></strong> file.</p><p>DNS/DHCP specific configuration, dnsmasq role variables for the gateway host, are located in the <strong><code>ansible/host_vars/gateway.yaml</code></strong> file.</p><h3 id="useful-commands" tabindex="-1">Useful Commands <a class="header-anchor" href="#useful-commands" aria-label="Permalink to &quot;Useful Commands&quot;">​</a></h3><ul><li>Checking DHCP leases on the DHCP server:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/misc/dnsmasq.leases</span></span></code></pre></div><ul><li>Checking DHCP lease on DHCP Clients:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/dhcp/dhclient.leases</span></span></code></pre></div><ul><li>Releasing the current DHCP lease (DHCP client):</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dhclient</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">interfac</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li>Obtaining a new DHCP lease (DHCP client):</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dhclient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">interfac</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><ul><li>Releasing a DHCP lease (DHCP server):</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dhcp_release</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">interfac</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">MAC</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> addres</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">client_i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p><strong><code>&lt;interface&gt;</code></strong>, <strong><code>&lt;address&gt;</code></strong>, <strong><code>&lt;MAC address&gt;</code></strong>, and <strong><code>&lt;client_id&gt;</code></strong> are columns in the file <strong><code>/var/lib/misc/dnsmasq.leases</code></strong>.</p><h3 id="additional-configuration-updating-dns-resolver" tabindex="-1">Additional configuration: Updating DNS resolver <a class="header-anchor" href="#additional-configuration-updating-dns-resolver" aria-label="Permalink to &quot;Additional configuration: Updating DNS resolver&quot;">​</a></h3><ul><li>To specify the DNS server to be used, modify the file <strong><code>/etc/systemd/resolved.conf</code></strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Resolve]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DNS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Domains</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">picluster.homelab.com</span></span></code></pre></div><ul><li>Restart the systemd-resolve service:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemd-resolved</span></span></code></pre></div><h2 id="ntp-server-configuration" tabindex="-1">NTP Server Configuration <a class="header-anchor" href="#ntp-server-configuration" aria-label="Permalink to &quot;NTP Server Configuration&quot;">​</a></h2><p><strong><code>chrony</code></strong> is used for configuring NTP synchronization. The <strong><code>gateway</code></strong> hosts an NTP server, and the rest of the cluster nodes are configured as NTP clients. The ansible role <a href="https://galaxy.ansible.com/quantfinancehub/ntp" target="_blank" rel="noreferrer"><strong>quantfinancehub.ntp</strong></a> facilitates automating NTP configuration tasks.</p><ul><li>Installation of chrony</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chrony</span></span></code></pre></div><ul><li>Configuration of chrony in <strong><code>/etc/chrony/chrony.conf</code></strong></li></ul><p>On the gateway:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.ubuntu.pool.ntp.org</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iburst</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1.ubuntu.pool.ntp.org</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iburst</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2.ubuntu.pool.ntp.org</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iburst</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3.ubuntu.pool.ntp.org</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iburst</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">allow</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 10.0.0.0/24</span></span></code></pre></div><p>On nodes (blueberry-master, strawberry-master, etc.):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10.0.0.1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iburst</span></span></code></pre></div><ul><li>Restart Chrony on gateay and each node</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chrony</span></span></code></pre></div><ul><li>Check Chrony status ongatewau and each node</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chrony</span></span></code></pre></div><h3 id="chrony-commands" tabindex="-1">Chrony Commands <a class="header-anchor" href="#chrony-commands" aria-label="Permalink to &quot;Chrony Commands&quot;">​</a></h3><ul><li>Checking time synchronization:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timedatectl</span></span></code></pre></div><ul><li>Viewing Chrony&#39;s activity:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chronyc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> activity</span></span></code></pre></div><ul><li>Viewing a detailed list of time servers:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chronyc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sources</span></span></code></pre></div><ul><li>Confirming Chrony synchronization:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chronyc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tracking</span></span></code></pre></div>`,165))])}const f=n(r,[["render",d]]);export{F as __pageData,f as default};

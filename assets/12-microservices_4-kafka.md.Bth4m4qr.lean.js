import{_ as t,c as n,j as i,a as e,t as l,a0 as h,o as p}from"./chunks/framework.BOVrHxUX.js";const k="/pikube-kubernetes-service/assets/kafka.BW8JrVZB.svg",r="/pikube-kubernetes-service/assets/kafka-schema-registry-clients.z60e1Anb.jpg",d="/pikube-kubernetes-service/assets/kafka-and-schema-registry.EpquFUkA.jpg",m=JSON.parse('{"title":"Kafka","description":"Deploying Kafka in a Kubernetes cluster using the Strimzi Kafka Operator for streamlined deployment","frontmatter":{"title":"Kafka","permalink":"/docs/12-microservices/4-kafka","description":"Deploying Kafka in a Kubernetes cluster using the Strimzi Kafka Operator for streamlined deployment","last_modified_at":"13-01-2025"},"headers":[],"relativePath":"12-microservices/4-kafka.md","filePath":"12-microservices/4-kafka.md"}'),o={name:"12-microservices/4-kafka.md"},g={id:"frontmatter-title",tabindex:"-1"};function c(a,s,E,y,F,u){return p(),n("div",null,[i("h1",g,[e(l(a.$frontmatter.title)+" ",1),s[0]||(s[0]=i("a",{class:"header-anchor",href:"#frontmatter-title","aria-label":'Permalink to "{{ $frontmatter.title }}"'},"​",-1))]),s[1]||(s[1]=h('<p align="center"><img alt="kafka" src="'+k+`" width="50%" height="%"></p><h2 id="kafka-cluster-installation" tabindex="-1">Kafka Cluster Installation <a class="header-anchor" href="#kafka-cluster-installation" aria-label="Permalink to &quot;Kafka Cluster Installation&quot;">​</a></h2><p>This guide outlines the deployment of an Apache Kafka cluster on Kubernetes using the <a href="https://strimzi.io/" target="_blank" rel="noreferrer"><strong><code>Strimzi Kafka Operator</code></strong></a>. Strimzi simplifies Kafka deployment and management by providing Kubernetes-native resources.</p><h3 id="installing-the-strimzi-operator-using-helm" tabindex="-1">Installing the Strimzi Operator Using Helm <a class="header-anchor" href="#installing-the-strimzi-operator-using-helm" aria-label="Permalink to &quot;Installing the Strimzi Operator Using Helm&quot;">​</a></h3><ul><li>Add the Strimzi Helm repository</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> strimzi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://strimzi.io/charts/</span></span></code></pre></div><ul><li>Update Helm repositories</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre></div><ul><li>Create the <code>kafka</code> Namespace</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> namespace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span></span></code></pre></div><ul><li>Install the Strimzi Kafka Operator:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> strimzi-kafka-operator</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> strimzi/strimzi-kafka-operator</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --namespace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span></span></code></pre></div><ul><li>Ensure the operator pods are running successfully.</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pods</span></span></code></pre></div><h3 id="deploying-the-kafka-cluster" tabindex="-1">Deploying the Kafka Cluster <a class="header-anchor" href="#deploying-the-kafka-cluster" aria-label="Permalink to &quot;Deploying the Kafka Cluster&quot;">​</a></h3><p>With the Strimzi operator installed, you can now deploy a Kafka cluster by creating a Kafka Custom Resource Definition (CRD).</p><ul><li>Create a manifest file named <code>kafka-cluster.yaml</code></li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kafka.strimzi.io/v1beta2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Kafka</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-cluster</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kafka</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  kafka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.5.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    listeners</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">plain</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9092</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">internal</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        tls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tls</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9093</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">internal</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        tls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      offsets.topic.replication.factor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      transaction.state.log.replication.factor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      transaction.state.log.min.isr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      default.replication.factor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      min.insync.replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      inter.broker.protocol.version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3.5&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    storage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jbod</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">persistent-claim</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">5Gi</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          deleteClaim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  zookeeper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    storage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">persistent-claim</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">5Gi</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      deleteClaim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  entityOperator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    topicOperator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    userOperator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p><strong>Configuration Highlights</strong>:</p><ul><li><strong>Kafka Brokers</strong>: Three brokers are deployed with both plain (non-TLS) and TLS listeners.</li><li><strong>ZooKeeper</strong>: Three ZooKeeper instances manage Kafka cluster metadata.</li><li><strong>Storage</strong>: Persistent volumes are provisioned using the Longhorn storage class, each with 5Gi of storage.</li><li><strong>High Availability</strong>: Replication factors and in-sync replica settings ensure data redundancy and fault tolerance.</li></ul></div><ul><li>Deploy the Kafka cluster by applying the manifest:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka-cluster.yaml</span></span></code></pre></div><ul><li>Check the status of the Kafka cluster to ensure it&#39;s running correctly:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span></span></code></pre></div><p><strong>Expected Output</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         DESIRED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> KAFKA</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REPLICAS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   DESIRED</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ZK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REPLICAS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   READY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   WARNINGS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">my-cluster</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   3</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                        3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                     True</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>By default, intra-broker communication is encrypted with TLS, and communication with ZooKeeper is authenticated and encrypted using mTLS. The ZooKeeper clusters are not exposed outside the Kubernetes cluster, enhancing security.</p></div><h3 id="creating-a-kafka-topic" tabindex="-1">Creating a Kafka Topic <a class="header-anchor" href="#creating-a-kafka-topic" aria-label="Permalink to &quot;Creating a Kafka Topic&quot;">​</a></h3><ul><li>Create a file named <code>kafka-topic.yaml</code></li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kafka.strimzi.io/v1beta2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">KafkaTopic</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-topic</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    strimzi.io/cluster</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-cluster</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  partitions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    retention.ms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7200000</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    segment.bytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1073741824</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p><strong>Configuration Details</strong>:</p><ul><li><strong>Partitions</strong>: The topic is divided into 1 partition.</li><li><strong>Replicas</strong>: Each partition has 3 replicas for high availability.</li><li><strong>Retention</strong>: Messages are retained for 2 hours (7200000 milliseconds).</li><li><strong>Segment Size</strong>: Each log segment is 1 GB.</li></ul></div><ul><li>Deploy the Kafka topic by applying the manifest:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka-topic.yaml</span></span></code></pre></div><ul><li>Check the status of the newly created topic:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafkatopic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-topic</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span></span></code></pre></div><p><strong>Expected Output</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       CLUSTER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      PARTITIONS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   REPLICATION</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FACTOR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   READY</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">my-topic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   my-cluster</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                    True</span></span></code></pre></div><h3 id="testing-the-kafka-cluster" tabindex="-1">Testing the Kafka Cluster <a class="header-anchor" href="#testing-the-kafka-cluster" aria-label="Permalink to &quot;Testing the Kafka Cluster&quot;">​</a></h3><p>To ensure that your Kafka cluster is functioning correctly, you can perform a simple test by producing and consuming messages.</p><ul><li>Run a <code>Kafka producer</code> pod to send messages to the <code>my-topic</code> topic:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka-producer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ti</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --image=quay.io/strimzi/kafka:0.29.0-kafka-3.2.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm=true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --restart=Never</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/kafka-console-producer.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bootstrap-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-cluster-kafka-bootstrap:9092</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --topic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-topic</span></span></code></pre></div><ul><li>In a separate terminal, run a <code>Kafka consumer</code> pod to receive messages from the <code>my-topic</code> topic:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka-consumer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ti</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --image=quay.io/strimzi/kafka:0.29.0-kafka-3.2.0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm=true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --restart=Never</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin/kafka-console-consumer.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --bootstrap-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-cluster-kafka-bootstrap:9092</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --topic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-topic</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --from-beginning</span></span></code></pre></div><ul><li>Send and Receive messages <ul><li><strong>Producer Terminal</strong>: Type messages and press Enter to send them.</li><li><strong>Consumer Terminal</strong>: Observe the messages being received in real-time.</li><li>Use <strong>Ctrl+C</strong> to exit both <code>producer</code> and <code>consumer</code> pods.</li></ul></li></ul><h2 id="schema-registry" tabindex="-1">Schema Registry <a class="header-anchor" href="#schema-registry" aria-label="Permalink to &quot;Schema Registry&quot;">​</a></h2><p>A <code>schema</code> defines the structure, data types, and relationships of message data, acting as a blueprint for data records. The <code>Kafka Schema Registry</code> is a centralized service that manages these schemas, ensuring data consistency and compatibility across Kafka producers and consumers.</p><p>Refer to <a href="https://www.confluent.io/en-gb/blog/how-schema-registry-clients-work/" target="_blank" rel="noreferrer">Schema Registry clients</a> documentation,</p><p align="center"><img alt="kafka-schema-registry-clients" src="`+r+'" width="%" height="%"></p><p>and refer to <a href="https://docs.confluent.io/platform/current/schema-registry/fundamentals/index.html" target="_blank" rel="noreferrer">Schema Registry Concepts for Confluent Platform</a> documentation.</p><p align="center"><img alt="kafka-and-schema-registry" src="'+d+`" width="%" height="%"></p><h3 id="benefits-of-using-kafka-schema-registry" tabindex="-1">Benefits of Using Kafka Schema Registry <a class="header-anchor" href="#benefits-of-using-kafka-schema-registry" aria-label="Permalink to &quot;Benefits of Using Kafka Schema Registry&quot;">​</a></h3><ul><li><strong>Schema Evolution</strong>: Allows seamless updates to data schemas while maintaining compatibility with existing consumers.</li><li><strong>Data Validation</strong>: Ensures that data conforms to predefined structures, enhancing data quality and preventing processing errors.</li><li><strong>Schema Management</strong>: Provides a centralized repository for tracking, versioning, and managing schemas.</li><li><strong>Interoperability</strong>: Facilitates consistent data formats across different programming languages and serialization frameworks.</li><li><strong>Compatibility Checks</strong>: Enforces schema compatibility (backward, forward, full) to prevent breaking changes.</li></ul><h3 id="deploying-the-schema-registry" tabindex="-1">Deploying the Schema Registry <a class="header-anchor" href="#deploying-the-schema-registry" aria-label="Permalink to &quot;Deploying the Schema Registry&quot;">​</a></h3><p>While the official Confluent Helm chart for Schema Registry is outdated, you can use the Bitnami Schema Registry Helm chart, which is actively maintained and supports multi-architecture Docker images.</p><ul><li>Create a <code>kafka-schema-registry-values.yaml</code> file</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kafka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  protocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    client</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">externalKafka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  brokers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PLAINTEXT://my-cluster-kafka-bootstrap:9092</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p><strong>Configuration Details</strong>:</p><ul><li><strong>Kafka Integration</strong>: Disables internal Kafka provisioning and connects to the existing Kafka cluster (<code>my-cluster-kafka-bootstrap:9092</code>).</li><li><strong>Authentication</strong>: Configured with default settings; modify as needed.</li><li><strong>Service Ports</strong>: Default client ports are used.</li></ul></div><ul><li>Deploy the Schema Registry using Helm:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> schema-registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bitnami/schema-registry</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka-schema-registry-values.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --namespace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span></span></code></pre></div><ul><li>Check the logs to ensure the Schema Registry has started successfully</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka-schema-registry-0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span></span></code></pre></div><p><strong>Sample Log Output</strong>:</p><div class="language-log vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">log</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">2023-08-19</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 09:06:38,783</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HV000001: Hibernate Validator </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Final (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">org.hibernate.validator.internal.util.Version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">2023-08-19</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 09:06:39,019</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Started </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">o.e.j.s.ServletContextHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@7e94d093{/,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,AVAILABLE} (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">org.eclipse.jetty.server.handler.ContextHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">921</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">2023-08-19</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 09:06:39,041</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Schema Registry version: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> commitId: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8969f9f38b043ca55d4e97536b6bcb5ccc54f42f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">47</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">2023-08-19</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 09:06:39,042</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Server started, listening for requests... (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">io.confluent.kafka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span></span></code></pre></div><h3 id="testing-the-schema-registry" tabindex="-1">Testing the Schema Registry <a class="header-anchor" href="#testing-the-schema-registry" aria-label="Permalink to &quot;Testing the Schema Registry&quot;">​</a></h3><p>To test the Schema Registry, you can use producer and consumer clients that interact with Avro-encoded messages.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>The Kafka consumer and producer Docker images used for testing are available in the kafka-python-client repository. These images include examples from the Confluent Kafka Python client.</p></div><ul><li>Run a producer pod that sends Avro-encoded messages to the Schema Registry:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka-producer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ti</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --image=AElQazouiInsights/kafka-python-client:latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm=true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --restart=Never</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> avro_producer.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-cluster-kafka-bootstrap:9092</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://schema-registry.kafka:8081</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-avro-topic</span></span></code></pre></div><p>Provide the necessary fields when prompted to build the Avro message.</p><ul><li>In a separate terminal, run a consumer pod to receive and decode Avro messages from the Schema Registry:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka-consumer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ti</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --image=AElQazouiInsights/kafka-python-client:latest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm=true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --restart=Never</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> avro_consumer.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-cluster-kafka-bootstrap:9092</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://schema-registry.kafka:8081</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my-avro-topic</span></span></code></pre></div><p>The consumer will display the messages produced by the producer.</p><h2 id="kafka-ui-kafdrop" tabindex="-1">Kafka UI (Kafdrop) <a class="header-anchor" href="#kafka-ui-kafdrop" aria-label="Permalink to &quot;Kafka UI (Kafdrop)&quot;">​</a></h2><p><a href="https://github.com/obsidiandynamics/kafdrop" target="_blank" rel="noreferrer"><strong><code>Kafdrop</code></strong></a> is a web-based user interface for browsing and monitoring Kafka topics, brokers, and consumer groups. It provides insights into Kafka cluster health and facilitates message inspection.</p><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>The official Helm chart for Kafdrop is not available in any official repository. Instead, a self-hosted Helm chart is maintained at <a href="https://AElQazouiInsights.github.io/helm-charts/" target="_blank" rel="noreferrer">https://AElQazouiInsights.github.io/helm-charts/</a>.</p></div><ul><li>Add your self-hosted Helm repository containing the Kafdrop chart</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AElQazouiInsights</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://AElQazouiInsights.github.io/helm-charts/</span></span></code></pre></div><ul><li>Fetch the latest charts from the repository:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre></div><ul><li>Create a <code>kafka-kafdrop-values.yaml</code> file</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Kafka broker connection</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kafka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  brokerConnect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my-cluster-kafka-bootstrap:9092</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># JVM options</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jvm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  opts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-Xms32M -Xmx64M&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Schema Registry connection</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">cmdArgs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;--schemaregistry.connect=http://schema-registry.kafka:8081&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Ingress configuration</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ingress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ingressClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  hosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kafdrop.picluster.quantfinancehub.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">secretName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kafdrop-tls</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      hosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kafdrop.picluster.quantfinancehub.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  annotations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Enable cert-manager to automatically create SSL certificates</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    cert-manager.io/cluster-issuer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">letsencrypt-issuer</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    cert-manager.io/common-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kafdrop.picluster.quantfinancehub.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Node affinity for architecture compatibility</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">affinity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  nodeAffinity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    requiredDuringSchedulingIgnoredDuringExecution</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      nodeSelectorTerms</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">matchExpressions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kubernetes.io/arch</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              operator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">In</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">amd64</span></span></code></pre></div><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p><strong>Configuration Highlights</strong>:</p><ul><li><strong>Kafka Connection</strong>: Connects to the Kafka cluster at <code>my-cluster-kafka-bootstrap:9092</code>.</li><li><strong>Schema Registry</strong>: Integrates with the Schema Registry at <code>http://schema-registry.kafka:8081</code>.</li><li><strong>Ingress</strong>: Configures ingress with TLS using <code>cert-manager</code> and routes traffic to <code>https://kafdrop.picluster.quantfinancehub.com/</code>.</li><li><strong>Node Affinity</strong>: Ensures that Kafdrop runs on <code>amd64</code> architecture nodes, as the Kafdrop Docker image is not multi-architecture.</li></ul></div><ul><li>Deploy Kafdrop using Helm</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upgrade</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafdrop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AElQazouiInsights/kafdrop</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka-kafdrop-values.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --namespace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span></span></code></pre></div><ul><li>Ensure that the Kafdrop pod is running:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kafka</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pods</span></span></code></pre></div><ul><li>Once the deployment is successful, access the Kafdrop UI at:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">https://kafdrop.picluster.quantfinancehub.com/</span></span></code></pre></div><p><strong>Features of Kafdrop</strong>:</p><ul><li><strong>Browse Topics</strong>: View detailed information about Kafka topics, including partitions and replication factors.</li><li><strong>Inspect Messages</strong>: Browse and search through messages within topics.</li><li><strong>Monitor Consumer Groups</strong>: Track consumer group activity and lag.</li><li><strong>Cluster Overview</strong>: Gain insights into broker health and cluster metrics.</li></ul><h2 id="references" tabindex="-1">References <a class="header-anchor" href="#references" aria-label="Permalink to &quot;References&quot;">​</a></h2><ul><li><a href="https://strimzi.io/docs/operators/latest/overview" target="_blank" rel="noreferrer"><strong><code>Strimzi Documentation</code></strong></a></li><li><a href="https://github.com/strimzi/strimzi-kafka-operator/" target="_blank" rel="noreferrer"><strong><code>Strimzi Kafka Operator GitHub Repository</code></strong></a></li><li><a href="https://github.com/obsidiandynamics/kafdrop" target="_blank" rel="noreferrer"><strong><code>Kafdrop - Kafka Web UI</code></strong></a></li><li><a href="https://docs.confluent.io/platform/current/schema-registry/index.html" target="_blank" rel="noreferrer"><strong><code>Confluent Schema Registry Documentation</code></strong></a></li><li><a href="https://github.com/bitnami/charts/tree/main/bitnami/schema-registry" target="_blank" rel="noreferrer"><strong><code>Bitnami Schema Registry Helm Chart</code></strong></a></li></ul>`,91))])}const b=t(o,[["render",c]]);export{m as __pageData,b as default};

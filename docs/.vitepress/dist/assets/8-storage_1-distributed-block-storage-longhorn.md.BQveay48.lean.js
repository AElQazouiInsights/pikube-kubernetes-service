import{_ as i,c as a,a0 as n,o as e}from"./chunks/framework.pWuaoOf3.js";const t="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20role='img'%20viewBox='-7.47%20-7.47%20388.18%20198.68'%3e%3ctitle%3eLonghorn%20logo%3c/title%3e%3cdefs%3e%3cstyle%3e.cls-2{fill:%235f224a}%3c/style%3e%3c/defs%3e%3cpath%20fill='%23384745'%20d='M0%20132.426h12.496v41.23h21.027v9.28H0zm35.546%2024.544c0-18.184%209.653-25.442%2023.198-25.442%2013.319%200%2022.972%207.258%2022.972%2025.442%200%2020.204-9.952%2026.864-22.972%2026.864-13.545%200-23.198-7.259-23.198-26.864zm33.374%200c0-12.571-4.938-16.613-10.326-16.613S48.342%20144.4%2048.342%20156.97c0%2013.993%204.864%2018.034%2010.252%2018.034s10.326-4.041%2010.326-18.034zm19.606-24.544h13.394l13.246%2025.068c1.122%202.17%202.618%205.985%203.816%208.98h.3c-.15-2.844-.524-6.885-.524-9.803v-24.245h10.251v50.51h-13.095l-13.768-24.994a69.661%2069.661%200%200%201-3.667-8.23h-.3c.225%202.843.599%206.211.599%208.978v24.245H88.526zm69.967%2024.993h20.803v25.516h-8.456v-8.53c-1.796%205.612-5.837%209.43-14.517%209.43-11.674%200-20.429-8.083-20.429-26.416s8.83-25.89%2022.599-25.89c15.49%200%2021.55%208.754%2019.83%2017.659l-11.748%201.271c.898-6.958-2.544-10.102-7.483-10.102-5.463%200-10.252%203.966-10.252%2017.286s4.116%2017.061%2010.176%2017.061c5.613%200%208.756-3.442%208.906-6.884v-1.42h-9.43zm28.287-24.993h12.496v19.08h15.34v-19.08h12.497v50.51h-12.496v-21.4h-15.34v21.4H186.78zm47.144%2024.544c0-18.184%209.652-25.442%2023.196-25.442%2013.32%200%2022.974%207.258%2022.974%2025.442%200%2020.204-9.952%2026.864-22.974%2026.864-13.544%200-23.196-7.259-23.196-26.864zm33.374%200c0-12.571-4.94-16.613-10.326-16.613-5.389%200-10.252%204.042-10.252%2016.613%200%2013.993%204.863%2018.034%2010.252%2018.034%205.387%200%2010.326-4.041%2010.326-18.034zm19.605-24.544h20.803c9.878%200%2016.538%204.79%2016.538%2014.068a14.135%2014.135%200%200%201-10.178%2013.694%2014.976%2014.976%200%200%201%203.518%204.79c2.095%204.265%203.516%208.978%207.931%208.978a5.823%205.823%200%200%200%202.021-.374l-.973%208.905a24.468%2024.468%200%200%201-5.013.674c-5.987%200-9.429-2.32-12.946-10.328-1.496-3.59-3.592-9.877-6.36-9.877H299.4v19.98h-12.497zm12.497%209.054v12.421h4.49c3.592%200%207.782-1.121%207.782-6.509%200-4.415-2.843-5.912-6.286-5.912zm33.375-9.054h13.395l13.244%2025.068c1.123%202.17%202.619%205.985%203.816%208.98h.3c-.15-2.844-.524-6.885-.524-9.803v-24.245h10.251v50.51h-13.094l-13.77-24.994a69.76%2069.76%200%200%201-3.665-8.23h-.3c.224%202.843.598%206.211.598%208.978v24.245h-10.251z'/%3e%3cpath%20d='M186.629%2056.439a7.006%207.006%200%200%201-1.37-.136l-3.7-.738%203.184%2019.588a6.947%206.947%200%200%201%20.091%201.123h3.588a7%207%200%200%201%20.115-1.258l3.568-19.534-4.106.82a7.006%207.006%200%200%201-1.37.135z'%20class='cls-2'/%3e%3cpath%20d='M240.226%200H133.032a14.435%2014.435%200%200%200-14.393%2014.392V96.97a14.435%2014.435%200%200%200%2014.393%2014.392h107.194a14.435%2014.435%200%200%200%2014.392-14.392V14.392A14.435%2014.435%200%200%200%20240.226%200zm2.418%2029.107l-1.751%2011.9a7%207%200%200%201-5.555%205.845l-28.467%205.684c-.005.028-.006.056-.011.085l-4.457%2024.395a14.019%2014.019%200%200%201-13.98%2013.26h-3.589a14.018%2014.018%200%200%201-13.985-13.34L166.9%2052.638l-28.98-5.786a7%207%200%200%201-5.556-5.845l-1.75-11.9a7%207%200%200%201%2013.85-2.039l1.033%207.02%2041.132%208.213%2041.131-8.212%201.033-7.02a7%207%200%200%201%2013.851%202.038z'%20class='cls-2'/%3e%3c/svg%3e",l="/pikube-kubernetes-service/assets/longhorn-architecture.CalJ1nxF.jpg",h="/pikube-kubernetes-service/assets/longhorn-ui-volume.K4k9gwIp.jpg",p="/pikube-kubernetes-service/assets/longhorn-ui-volume-details.BWIWMRdm.jpg",y=JSON.parse('{"title":"Distributed Block Storage with Longhorn","description":"How to deploy distributed block storage solution based on Longhorn in PiKube Kubernetes cluster.","frontmatter":{"title":"Distributed Block Storage with Longhorn","permalink":"/docs/8-storage/1-distributed-block-storage-longhorn","description":"How to deploy distributed block storage solution based on Longhorn in PiKube Kubernetes cluster.","last_modified_at":"20-12-2023"},"headers":[],"relativePath":"8-storage/1-distributed-block-storage-longhorn.md","filePath":"8-storage/1-distributed-block-storage-longhorn.md"}'),o={name:"8-storage/1-distributed-block-storage-longhorn.md"};function r(k,s,g,d,c,E){return e(),a("div",null,s[0]||(s[0]=[n('<p align="center"><img alt="longhorn" src="'+t+'" width="70%" height="%"></p><ul><li><a href="#implementation-using-internet-small-computer-system-interface-iscsi">Implementation Using Internet Small Computer System Interface (iSCSI)</a></li><li><a href="#addressing-longhorn-issues-with-multipath">Addressing Longhorn Issues with Multipath</a></li><li><a href="#longhorn-installation-procedure-using-helm">Longhorn Installation Procedure Using Helm</a></li><li><a href="#configuring-access-to-longhorn-ui-with-traefik-ingress">Configuring Access to Longhorn UI with Traefik Ingress</a></li><li><a href="#testing-longhorn-storage">Testing Longhorn Storage</a></li><li><a href="#configuring-longhorn-as-the-default-kubernetes-storageclass">Configuring Longhorn as the Default Kubernetes StorageClass</a></li></ul><p>K3s, by default, uses a Local Path Provisioner for PersistentVolumeClaims (PVCs), which relies on storage local to the host node. This approach limits data access to the specific node where the pod is running. To overcome this limitation, a distributed block storage system like <code>Longhorn</code> is essential. <code>Longhorn</code> decouples storage from pods, allowing PVCs to be mounted on any pod across the cluster, irrespective of node location.</p><p><strong>Longhorn as a distributed block storage solution</strong>:</p><p>Longhorn is a lightweight, reliable, and user-friendly distributed block storage system for Kubernetes. It&#39;s a viable alternative to other storage solutions like Rook/Ceph and is compatible with both AMD64 and ARM64 architectures. This compatibility makes it well-suited for a diverse environment such as PiKube Kubernetes cluster with Raspberry Pi and Orange Pi nodes.</p><h2 id="implementation-using-internet-small-computer-system-interface-iscsi" tabindex="-1">Implementation Using Internet Small Computer System Interface (iSCSI) <a class="header-anchor" href="#implementation-using-internet-small-computer-system-interface-iscsi" aria-label="Permalink to &quot;Implementation Using Internet Small Computer System Interface (iSCSI)&quot;">​</a></h2><p>Longhorn requires the <code>open-iscsi</code> package on all cluster nodes, with the <code>iscsid</code> daemon running on all worker nodes. Additionally, for optimal compatibility and functionality, ensure that <code>nfs-common</code>, <code>open-iscsi</code>, <code>cryptsetup</code>, and <code>dmsetup</code> are installed on each node. For instance, on <code>cranberry-worker</code>, all required packages <code>[nfs-common open-iscsi cryptsetup dmsetup]</code> are confirmed to be installed.</p><p>For more details on the implementation, refer to [<strong><code>Longhorn Engine documentation</code></strong>]<a href="https://github.com/longhorn/longhorn-engine" target="_blank" rel="noreferrer">(</a>):</p><p align="center"><img alt="longhorn" src="'+l+`" width="80%" height="%"></p><ul><li><p><strong><code>Longhorn as iSCSI Target</code></strong>: Longhorn functions as an iSCSI Target, creating volumes that are detected by the iSCSI Initiator on each node.</p></li><li><p><strong><code>Nodes as iSCSI Initiators</code></strong>: Nodes in the cluster are configured as iSCSI Initiators, recognizing Longhorn volumes as block devices under <strong><code>/dev/longhorn/</code></strong>.</p></li></ul><p>Configure <strong><code>iSCSI</code></strong> for Longhorn involves installation of <strong><code>Open-iscsi</code></strong> on each <strong><code>Node</code></strong> to ensures all nodes can interact with Longhorn volumes using iSCSI.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nfs-common</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open-iscsi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cryptsetup</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dmsetup</span></span></code></pre></div><p>Configure <strong><code>SCSI Initiators</code></strong> by excluding default authentication parameters in <strong><code>iscsid.conf</code></strong> on each <strong><code>Node</code></strong>. Longhorn&#39;s local iSCSI target does not use authentication.</p><p>Inside <strong><code>iscsid.conf</code></strong>, look for lines related to authentication. These might include settings like <strong><code>node.session.auth.username</code></strong>, <strong><code>node.session.auth.password</code></strong>, <strong><code>discovery.sendtargets.auth.username</code></strong>, and <strong><code>discovery.sendtargets.auth.password</code></strong>.</p><h2 id="addressing-longhorn-issues-with-multipath" tabindex="-1">Addressing Longhorn Issues with Multipath <a class="header-anchor" href="#addressing-longhorn-issues-with-multipath" aria-label="Permalink to &quot;Addressing Longhorn Issues with Multipath&quot;">​</a></h2><p>When multipath is active on storage nodes, it can automatically manage block devices, including those created by Longhorn. This might lead to errors when starting Pods that use Longhorn volumes, such as &quot;volume already mounted.&quot;</p><p><strong>Solution</strong>: To resolve this, Longhorn devices need to be blacklisted in the multipath configuration. This prevents multipath from managing these devices.</p><p>To modify <strong><code>Multipath</code></strong> configuration, open the <strong><code>/etc/multipath.conf</code></strong> file on each node where multipath is running, this includes nodes using Longhorn for storage, and add the blacklist command.</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">blacklist {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  devnode </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;^sd[a-z0-9]+&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>This configuration tells <code>multipath</code> to ignore devices matching the specified pattern, which includes Longhorn-managed devices.</p><p>After updating the configuration, restart the <code>multipath</code> daemon to apply the changes.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multipathd</span></span></code></pre></div><h2 id="longhorn-installation-procedure-using-helm" tabindex="-1">Longhorn Installation Procedure Using Helm <a class="header-anchor" href="#longhorn-installation-procedure-using-helm" aria-label="Permalink to &quot;Longhorn Installation Procedure Using Helm&quot;">​</a></h2><ul><li>On <strong><code>gateway</code></strong>, add <strong><code>Longhorn</code></strong>&#39;s Helm Repository</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://charts.longhorn.io</span></span></code></pre></div><ul><li>Fetch the latest charts from the repository to ensure you have the most recent updates</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span></code></pre></div><ul><li>Create a dedicated namespace for Longhorn in your PiKube Kubernetes cluster</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> namespace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn-system</span></span></code></pre></div><ul><li>Create a <strong><code>longhorn-values.yaml</code></strong> file for custom configurations</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">defaultSettings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  defaultDataPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/storage&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">ingress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  ingressClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn.picluster.quantfinancehub.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tlsSecret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-tls</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  annotations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nginx.ingress.kubernetes.io/auth-type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">basic</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nginx.ingress.kubernetes.io/auth-secret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx/basic-auth-secret</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nginx.ingress.kubernetes.io/service-upstream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    cert-manager.io/cluster-issuer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">letsencrypt-issuer</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    cert-manager.io/common-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn.picluster.quantfinancehub.com</span></span></code></pre></div><p>📢 This configuration:</p><p>➜ Sets <strong>/storage</strong> as the default path for data storage.</p><p>➜ Enables and configures an <strong><code>Ingress</code></strong> resource for accessing the <strong><code>Longhorn dashboard</code></strong> through <strong><code>NGINX</code></strong>.</p><p>➜ Configures <strong><code>basic authentication</code></strong> and <strong><code>TLS</code></strong> for the dashboard using <strong><code>Cert-Manager</code></strong>.</p><ul><li>Install <strong><code>Longhorn</code></strong> in the <strong><code>longhorn-system</code></strong> namespace using <strong><code>longhorn-values.yaml</code></strong> file</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">helm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn/longhorn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --namespace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn-system</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn-values.yaml</span></span></code></pre></div><p>📌 <strong>Note</strong></p><p>TODO</p><p><em>For enabling backup to an S3 storage server, additional backup configurations are required. Refer to the <a href="./../10-backup/1-backup-and-restore.html"><strong><code>Longhorn backup documentation</code></strong></a> for setup details.</em></p><ul><li>To confirm that the Longhorn installation has succeeded:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn-system</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pod</span></span></code></pre></div><h2 id="configuring-access-to-longhorn-ui-with-traefik-ingress" tabindex="-1">Configuring Access to Longhorn UI with Traefik Ingress <a class="header-anchor" href="#configuring-access-to-longhorn-ui-with-traefik-ingress" aria-label="Permalink to &quot;Configuring Access to Longhorn UI with Traefik Ingress&quot;">​</a></h2><p>To make the <strong><code>Longhorn UI</code></strong> accessible through a specific URL (<code>longhorn.picluster.quantfinancehub.com</code>) via the <strong><code>Traefik Ingress Controller</code></strong>, Ingress resources needs to be created. These resources will manage traffic, ensuring secure HTTPS connections and <strong><code>redirecting HTTP to HTTPS</code></strong>. <strong><code>Basic HTTP authentication</code></strong> will be implemented for security, as <strong><code>Longhorn&#39;s frontend</code></strong> doesn&#39;t provide its own authentication mechanism.</p><p>📌 <strong>Note</strong></p><p><em>Traefik 2.x has a known issue with WebSocket headers that affects Longhorn UI API calls. Refer to Longhorn&#39;s &quot;Troubleshooting Traefik 2.x as an ingress controller&quot; documentation for solutions.</em></p><ul><li><p>Create a <strong><code>longhorn_ingress.yaml</code></strong> file</p><ul><li><p><strong><code>API Issue Mitigation with Custom Headers</code></strong>: Setting custom request headers to support WebSocket connections.</p></li><li><p><strong><code>HTTPS Ingress Resource</code></strong>: Configuring Ingress to utilize HTTPS, enable TLS, and apply necessary middleware.</p></li><li><p><strong><code>HTTP Ingress for Redirection</code></strong>: Defining an additional Ingress resource to redirect HTTP traffic to HTTPS.</p></li></ul></li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Solving the API issue with custom headers for WebSocket support</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">traefik.containo.us/v1alpha1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Middleware</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">svc-longhorn-headers</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-system</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  headers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    customRequestHeaders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      X-Forwarded-Proto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTTPS Ingress Resource</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">networking.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Ingress</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-ingress</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-system</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  annotations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Define HTTPS as the entry point</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    traefik.ingress.kubernetes.io/router.entrypoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">websecure</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Enable TLS</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    traefik.ingress.kubernetes.io/router.tls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;true&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Reference Middleware for Basic Auth and custom headers</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    traefik.ingress.kubernetes.io/router.middlewares</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      traefik-basic-auth@kubernetescrd, longhorn-system-svc-longhorn-headers@kubernetescrd</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Enable automatic SSL certificate creation and storage in a Secret via cert-manager</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    cert-manager.io/cluster-issuer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">picluster-ca-issuer</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    cert-manager.io/common-name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn.picluster.quantfinancehub.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  tls</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">hosts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn.picluster.quantfinancehub.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      secretName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">storage-tls</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn.picluster.quantfinancehub.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        paths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            pathType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Prefix</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">                name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-frontend</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">                port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">                  number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTTP Ingress for HTTP -&gt; HTTPS Redirection</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Ingress</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">networking.k8s.io/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-redirect</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-system</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  annotations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Use Middleware for redirection</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    traefik.ingress.kubernetes.io/router.middlewares</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">traefik-redirect@kubernetescrd</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Define HTTP as the entrypoint</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    traefik.ingress.kubernetes.io/router.entrypoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">web</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">host</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn.picluster.quantfinancehub.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        paths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            pathType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Prefix</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              service</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">                name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-frontend</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">                port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">                  number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span></code></pre></div><ul><li>Deploy the Ingress configuration</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn-ingress.yaml</span></span></code></pre></div><p>💡 <strong>Additional Considerations</strong></p><ul><li><p><strong><code>Custom Domains and DNS</code></strong>: Ensure <strong><code>longhorn.picluster.quantfinancehub.com</code></strong> is correctly mapped to your Traefik Load Balancer&#39;s external IP via DNS.</p></li><li><p><strong><code>Certificate Management</code></strong>: The <strong><code>ca-issuer</code></strong> should be correctly configured in PiKube Kubernetes cluster to issue certificates for <strong><code>longhorn.picluster.quantfinancehub.com</code></strong>.</p></li><li><p><strong><code>Authentication</code></strong>: If not already done, create and configure the <strong><code>traefik-basic-auth</code></strong> Middleware with the desired credentials.</p></li><li><p><strong><code>Testing</code></strong>: After applying the configuration, test accessing <strong><code>longhorn.picluster.quantfinancehub.com</code></strong>. A redirection to HTTPS will be done, and prompted for basic authentication credentials.</p></li></ul><h2 id="testing-longhorn-storage" tabindex="-1">Testing Longhorn Storage <a class="header-anchor" href="#testing-longhorn-storage" aria-label="Permalink to &quot;Testing Longhorn Storage&quot;">​</a></h2><p>To verify that <strong><code>Longhorn storage</code></strong> is functioning correctly, create a <strong><code>PersistentVolumeClaim (PVC)</code></strong> using Longhorn as the storage class and then deploy a Pod that utilizes this PVC. Here&#39;s how to perform this test:</p><p>📌 <strong>Note</strong></p><p><em>An Ansible playbook has been developed to automate the creation of this testing Pod. It&#39;s located at roles/longhorn/test_longhorn.yaml.</em></p><ul><li>Create a dedicated namespace for the testing resources</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> namespace</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testing-longhorn</span></span></code></pre></div><ul><li>Define a PersistentVolumeClaim and a Pod in <strong><code>longhorn-test.yaml</code></strong> file:</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">PersistentVolumeClaim</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-pvc</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">testing-longhorn</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  accessModes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ReadWriteOnce</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  storageClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  resources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    requests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      storage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1Gi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">---</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Pod</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-test</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">testing-longhorn</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  containers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-test</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx:stable-alpine</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      imagePullPolicy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">IfNotPresent</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      volumeMounts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-pvc</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          mountPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/data</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">containerPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-pvc</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      persistentVolumeClaim</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        claimName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">longhorn-pvc</span></span></code></pre></div><p>This file describes a PersistentVolumeClaim for Longhorn storage and a test Pod using Nginx image to utilize the claimed volume.</p><ul><li>Deploy the PersistentVolumeClaim and Pod</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn-test.yaml</span></span></code></pre></div><ul><li>Verify that the Pod has been successfully started:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pods</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wide</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testing-longhorn</span></span></code></pre></div><ul><li>Ensure that the PersistentVolume (PV) and PersistentVolumeClaim (PVC) have been successfully created</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pv</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pvc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testing-longhorn</span></span></code></pre></div><ul><li>Access the Pod&#39;s shell and write a test file to the persistent volume</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testing-longhorn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn-test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;echo &#39;Hello Longhorn&#39; &gt; /data/test.txt&quot;</span></span></code></pre></div><ul><li>Confirm that the file was written successfully</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testing-longhorn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn-test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/test.txt</span></span></code></pre></div><ul><li>Delete the Pod to simulate a failure</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testing-longhorn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn-test</span></span></code></pre></div><p>Re-deploy the Pod (it will re-attach to the existing PVC)</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn-test.yaml</span></span></code></pre></div><ul><li>Once the Pod is back up, check the file again</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> testing-longhorn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> longhorn-test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/test.txt</span></span></code></pre></div><p>The output should still be Hello Longhorn, confirming that the data persisted across Pod restarts.</p><p>💡 <strong>Additional Considerations</strong></p><ul><li><p><strong>Monitoring and Logs</strong>: Monitor the Pod and Longhorn system logs for any errors or issues.</p></li><li><p><strong>Volume Size</strong>: Adjust the requested storage size in the PVC according to your needs and available resources.</p></li><li><p><strong>Cleanup</strong>: Remember to delete the testing resources after you&#39;re done to free up space and resources.</p></li><li><p>Check in the longhorn-UI the created volumes and the replicas</p></li></ul><p align="center"><img alt="longhorn" src="`+h+'" width="%" height="%"></p><p align="center"><img alt="longhorn" src="'+p+`" width="%" height="%"></p><h2 id="configuring-longhorn-as-the-default-kubernetes-storageclass" tabindex="-1">Configuring Longhorn as the Default Kubernetes StorageClass <a class="header-anchor" href="#configuring-longhorn-as-the-default-kubernetes-storageclass" aria-label="Permalink to &quot;Configuring Longhorn as the Default Kubernetes StorageClass&quot;">​</a></h2><p>🚨 <strong>Important Note</strong></p><p>This step is not necessary if K3s is installed with the Local Path Provisioner disabled (using the <strong><code>--disable local-storage</code></strong> installation option). If this option wasn&#39;t set during installation, follow the procedure below.</p><p><strong>Background</strong>:</p><p>By default, K3s includes Rancher&#39;s Local Path Provisioner, enabling the immediate creation of Persistent Volume Claims using local storage on the respective node.</p><p>To utilize Longhorn as the default storage class for new Helm installations, the Local Path Provisioner must be reconfigured.</p><p><strong>Checking Default Storage Classes</strong>:</p><ul><li>After installing Longhorn, verify the default storage classes</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> storageclass</span></span></code></pre></div><p>something like might be visible</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NAME                 PROVISIONER             RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (default) rancher.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">io</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/local-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path   Delete          WaitForFirstConsumer   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                  10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">longhorn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (default)   driver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">longhorn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">io</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      Delete          Immediate              </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                   3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m27s</span></span></code></pre></div><p>Notice that both Local-Path and Longhorn are marked as default storage classes.</p><p><strong>Changing the Default Storage Class</strong>:</p><p>To remove the Local Path as the default and set Longhorn as the sole default storage class, execute the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> patch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> storageclass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local-path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{&quot;metadata&quot;: {&quot;annotations&quot;:{&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;false&quot;}}}&#39;</span></span></code></pre></div><p>This command updates the Local Path Provisioner, ensuring that Longhorn is recognized as the default storage class for any subsequent deployments.</p><p><strong>Verification</strong>:</p><ul><li>Confirm the change by rechecking the storage classes:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kubectl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --kubeconfig=/home/pi/.kube/config.yaml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> storageclass</span></span></code></pre></div><p>Now only Longhorn is marked as the default.</p><p>Full procedure is explained in <a href="https://kubernetes.io/docs/tasks/administer-cluster/change-default-storage-class/" target="_blank" rel="noreferrer"><strong><code>Kubernetes documentation</code></strong></a>.</p><p>💡 <strong>Additional Considerations</strong></p><ul><li><p><strong><code>Helm Installations</code></strong>: After setting Longhorn as the default storage class, any new Helm installations will automatically use it for dynamic volume provisioning.</p></li><li><p><strong><code>Existing PVCs</code></strong>: This change won&#39;t affect existing PVCs. If needed, to migrate existing PVCs to Longhorn, a manual transfer of the data is required or recreate the PVCs.</p></li><li><p><strong><code>Cluster Configuration</code></strong>: Always ensure the cluster configuration and node resources align with Longhorn&#39;s requirements for optimal performance and stability.</p></li></ul>`,105)]))}const F=i(o,[["render",r]]);export{y as __pageData,F as default};
